from __main__ import *

def getAddress(offset):
	return currentProgram.getAddressFactory().getDefaultAddressSpace().getAddress(offset)
def getFuncSize(func):
	return func.getBody().getNumAddresses()

functionManager = currentProgram.getFunctionManager()
funcs = functionManager.getFunctions(True)
outstr = ""
for func in funcs:
	symbols = currentProgram.getListing().getCodeUnitAt(func.getEntryPoint()).getSymbols()
	addr = symbols[0].getAddress()
	func = functionManager.getFunctionAt(addr)
	funcBody = func.getBody()
	if funcBody.getMaxAddress().getOffset() - funcBody.getMinAddress().getOffset() > funcBody.getNumAddresses():
		# skip inlined garbage generated by ghidra
		continue

	sym = symbols[0]
	if (len(symbols) > 1):
		sym = symbols[1]
	name = sym.getName(True)
	if "_Z" not in name and not name.startswith("FUN_"):
		name = "{}__{}".format(addr, name)
	if "," in name:
		name = "FUN_{}".format(str(addr))
	outstr += "0x000000{},U,{:05d},{}\n".format(addr, getFuncSize(func), name)
with open("out.txt", "w") as f:
	f.write(outstr)